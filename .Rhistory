install.packages("devtools")
devtools::install_github("twitter/AnomalyDetection")
devtools::install_github("twitter/AnomalyDetection")
devtools::install_github("twitter/AnomalyDetection")
install.packages("Rcpp")
devtools::install_github("twitter/AnomalyDetection")
library("testthat", lib.loc="C:/Users/benjamin.a.johnson/AppData/Local/Continuum/anaconda3/envs/coursera/Lib/R/library")
remove.packages("testthat")
devtools::install_github("twitter/AnomalyDetection")
install.packages("testthat")
install.packages("testthat")
install.packages("testthat")
devtools::install_github("twitter/AnomalyDetection")
devtools::install_github("twitter/AnomalyDetection")
devtools::install_github("twitter/AnomalyDetection")
install.packages("digest")
devtools::install_github("twitter/AnomalyDetection")
library("rlang", lib.loc="C:/Users/benjamin.a.johnson/AppData/Local/Continuum/anaconda3/envs/coursera/Lib/R/library")
install.packages("rlang")
devtools::install_github("twitter/AnomalyDetection")
devtools::install_github("twitter/AnomalyDetection")
install.packages('glue')
devtools::install_github("twitter/AnomalyDetection")
install.packages('fansi')
devtools::install_github("twitter/AnomalyDetection")
install.packages('processx')
devtools::install_github("twitter/AnomalyDetection")
install.packages('ps')
install.packages("ps")
install.packages('tibble')
devtools::install_github("twitter/AnomalyDetection")
library(AnomalyDetection)
help("AnomalyDetectionTs")
help("AnomalyDetectionVec")
help("AnomalyDetectionTs")
data("raw_data")
res = AnomalyDetectionTs(raw_data, max_anoms=0.02, direction='both', plot=TRUE)
res$plot
View(raw_data)
res$plot
devtools::install_github("hrbrmstr/AnomalyDetection")
library(AnomalyDetection)
library(hrbrthemes)
library(tidyverse)
RStudio.Version()$version
version$version.string
installr:install.packages("installr")
install.packages("installr")
library(installr)
updateR()
updateR()
library(installr)
updateR()
q()
source('C:/Users/benjamin.a.johnson/OneDrive - AFS Defense/anomaly_detection/hrbrmstr_AnomalyDetection.R')
setwd("C:/Users/benjamin.a.johnson/OneDrive - AFS Defense/anomaly_detection")
res <- ad_ts(raw_data, max_anoms=0.02, direction='both')
library(AnomalyDetection)
library(hrbrthemes)
library(tidyverse)
devtools::install_github("hrbrmstr/AnomalyDetection")
library(devtools)
install.packages("devtools")
library(devtools)
build_github_devtools()
devtools::install_github("hrbrmstr/AnomalyDetection")
data(raw_data)
source('C:/Users/benjamin.a.johnson/OneDrive - AFS Defense/anomaly_detection/hrbrmstr_AnomalyDetection.R', echo=TRUE)
library(hrbrthemes)
install.packages("hrbrthemes")
install.packages("tidyverse")
source('C:/Users/benjamin.a.johnson/OneDrive - AFS Defense/anomaly_detection/hrbrmstr_AnomalyDetection.R', echo=TRUE)
source('C:/Users/benjamin.a.johnson/OneDrive - AFS Defense/anomaly_detection/hrbrmstr_AnomalyDetection.R')
library(AnomalyDetection)
library(hrbrthemes)
library(tidyverse)
library(extrafont)
loadfonts(device = "win")
data(raw_data)
res <- ad_ts(raw_data, max_anoms=0.02, direction='both')
glimpse(res)
# for ggplot2
raw_data$timestamp <- as.POSIXct(raw_data$timestamp)
ggplot() +
geom_line(
data=raw_data, aes(timestamp, count),
size=0.125, color="lightslategray"
)  +
geom_point(
data=res, aes(timestamp, anoms), color="#cb181d", alpha=1/3
) +
scale_x_datetime(date_labels="%b\n%Y") +
scale_y_comma() +
theme_ipsum_rc(grid="XY")
View(raw_data)
View(res)
setwd("C:/Users/benjamin.a.johnson/OneDrive - AFS Defense/anomaly_detection")
tempdata <- read.csv("daily-min-temperatures.csv")
res_temp <- ad_ts(tempdata, max_anoms=0.02, direction='both')
View(tempdata)
View(raw_data)
res_temp <- ad_vec(tempdata, max_anoms=0.02, direction='both')
res_temp <- ad_ts(tempdata, max_anoms=0.02, direction='both')
help("ad_ts")
help("ad_vec")
View(raw_data)
View(tempdata)
glimpse(res_temp)
res_temp <- ad_ts(tempdata, direction='both')
tempdata$Temp.as.numeric()
temperature <- tempdata$Temp
temperature_num <- as.numeric(temperature)
t <- tempdate$Date
t <- tempdata$Date
library(AnomalyDetection)
library(hrbrthemes)
library(tidyverse)
library(extrafont)
library(dplyr)
font_import()
font_import()
loadfonts(device = "win")
data <- read.csv("NORMAL_HLY_sample_csv.csv")
data_use <- select(data, data$DATE, data$HLY-TEMP-NORMAL)
View(data)
data_use <- select(data, data$DATE, data$HLY.TEMP.NORMAL)
data_use <- select(data, DATE, HLY.TEMP.NORMAL)
View(data_use)
res <- ad_ts(data, max_anoms=0.02, direction='both')
data_use$DATE <- as.character(data$DATE)
data_use$DATE <- as.POSIXct(data$DATE)
View(data_use)
View(data)
View(data_use)
library(lubridate)
data_use$DATE <- dmy_hms(data_use$DATE)
View(data_use)
View(data)
View(data)
library(AnomalyDetection)
library(hrbrthemes)
library(tidyverse)
library(extrafont)
library(dplyr)
library(lubridate)
data <- read.csv("NORMAL_HLY_sample_csv.csv")
data_use <- select(data, DATE, HLY.TEMP.NORMAL)
data_use$DATE <- as.character(data$DATE)
data_use$DATE <- dmy_hm(data_use$DATE)
res <- ad_ts(data_use, max_anoms=0.02, direction='both')
glimpse(res)
View(data_use)
View(data)
library(AnomalyDetection)
library(hrbrthemes)
library(tidyverse)
library(extrafont)
library(dplyr)
library(lubridate)
data <- read.csv("NORMAL_HLY_sample_csv.csv")
data_use <- select(data, DATE, HLY.TEMP.NORMAL)
data_use$DATE <- as.character(data$DATE)
data_use$DATE <- ymd_hm(data_use$DATE)
res <- ad_ts(data_use, max_anoms=0.02, direction='both')
View(data_use)
# for ggplot2
data$DATE <- as.POSIXct(data$DATE)
typeof(data$DATE)
typeof(data_use$DATE)
data_use$DATE <- as.POSIXct.numeric(data_use$DATE)
data_use$DATE <- as.POSIXct.numeric(data_use$DATE, origin "2010-01-01")
data_use$DATE <- as.POSIXct.numeric(data_use$DATE, origin "1970-01-01")
data_use$DATE <- as.POSIXct.numeric(data_use$DATE, origin = "1970-01-01")
data_use$DATE <- as.POSIXct(data_use$DATE, origin = "1970-01-01")
View(data_use)
typeof(data_use$DATE)
type(data_use$DATE)
res <- ad_ts(data_use, max_anoms=0.02, direction='both')
data_use$DATE <- as.POSIXct(data_use$DATE, origin = "1970-01-01")
library(AnomalyDetection)
library(hrbrthemes)
library(tidyverse)
library(extrafont)
library(dplyr)
library(lubridate)
data <- read.csv("NORMAL_HLY_sample_csv.csv")
data_use <- select(data, DATE, HLY.TEMP.NORMAL)
data_use$DATE <- as.character(data$DATE)
data_use$DATE <- ymd_hm(data_use$DATE)
r
res <- ad_ts(data_use, max_anoms=0.02, direction='both')
glimpse(res)
help(geom_line)
# for ggplot2
ggplot() +
geom_line(
data=data_use, aes(timestamp, temp),
size=0.125, color="lightslategray"
)  +
geom_point(
data=res, aes(timestamp, anoms), color="#cb181d", alpha=1/3
) +
scale_x_datetime(date_labels="%b\n%Y") +
scale_y_comma() +
theme_ipsum_rc(grid="XY")
# for ggplot2
ggplot() +
geom_line(
data=data_use, aes(timestamp, count),
size=0.125, color="lightslategray"
)  +
geom_point(
data=res, aes(timestamp, anoms), color="#cb181d", alpha=1/3
) +
scale_x_datetime(date_labels="%b\n%Y") +
scale_y_comma() +
theme_ipsum_rc(grid="XY")
# for ggplot2
ggplot() +
geom_line(
data=data_use, aes(DATE, HLY.TEMP.NORMAL),
size=0.125, color="lightslategray"
)  +
geom_point(
data=res, aes(DATE, HLY.TEMP.NORMAL), color="#cb181d", alpha=1/3
) +
scale_x_datetime(date_labels="%b\n%Y") +
scale_y_comma() +
theme_ipsum_rc(grid="XY")
# for ggplot2
ggplot() +
geom_line(
data=data_use,
size=0.125, color="lightslategray"
)  +
geom_point(
data=res, color="#cb181d", alpha=1/3
) +
scale_x_datetime(date_labels="%b\n%Y") +
scale_y_comma() +
theme_ipsum_rc(grid="XY")
View(res)
res <- ad_ts(data_use, direction='both')
glimpse(res)
View(data_use)
data_use$HLY.TEMP.NORMAL[5] <- 5000
res <- ad_ts(data_use, direction='both')
glimpse(res)
# for ggplot2
ggplot() +
geom_line(
data=data_use, aes(timestamp, count),
size=0.125, color="lightslategray"
)  +
geom_point(
data=res, aes(timestamp, anoms), color="#cb181d", alpha=1/3
) +
scale_x_datetime(date_labels="%b\n%Y") +
scale_y_comma() +
theme_ipsum_rc(grid="XY")
# for ggplot2
ggplot() +
geom_line(
data=data_use, aes(DATE, HLY.TEMP.NORMAL),
size=0.125, color="lightslategray"
)  +
geom_point(
data=res, aes(timestamp, anoms), color="#cb181d", alpha=1/3
) +
scale_x_datetime(date_labels="%b\n%Y") +
scale_y_comma() +
theme_ipsum_rc(grid="XY")
res <- ad_ts(data_use, max_anoms = 0.02, direction='both')
library(AnomalyDetection)
library(hrbrthemes)
library(tidyverse)
library(extrafont)
library(dplyr)
library(lubridate)
data <- read.csv("NORMAL_HLY_sample_csv.csv")
data_use <- select(data, DATE, HLY.TEMP.NORMAL)
data_use$DATE <- as.character(data$DATE)
data_use$DATE <- ymd_hm(data_use$DATE)
data_use$HLY.TEMP.NORMAL[5] <- 500
res <- ad_ts(data_use, max_anoms = 0.02, direction='both')
glimpse(res)
# for ggplot2
ggplot() +
geom_line(
data=data_use, aes(DATE, HLY.TEMP.NORMAL),
size=0.125, color="lightslategray"
)  +
geom_point(
data=res, aes(timestamp, anoms), color="#cb181d", alpha=1/3
) +
scale_x_datetime(date_labels="%b\n%Y") +
scale_y_comma() +
theme_ipsum_rc(grid="XY")
source('C:/Users/benjamin.a.johnson/OneDrive - AFS Defense/anomaly_detection/hrbrmstr_AnomalyDetection.R')
library(AnomalyDetection)
library(hrbrthemes)
library(tidyverse)
library(extrafont)
library(dplyr)
library(lubridate)
data <- read.csv("daily-min-temperatures.csv")
res <- ad_ts(data_use, max_anoms = 0.02, direction='both')
glimpse(res)
res <- ad_ts(data, max_anoms = 0.02, direction='both')
data <- read.csv("daily-min-temperatures.csv")
data$Date <- ymd(data_use$DATE)
library(AnomalyDetection)
library(hrbrthemes)
library(tidyverse)
library(extrafont)
library(dplyr)
library(lubridate)
data <- read.csv("daily-min-temperatures.csv")
data$Date <- as.character(data$Date)
data$Date <- ymd(data_use$DATE)
data$Date <- ymd(data$Date)
res <- ad_ts(data, max_anoms = 0.02, direction='both')
data$Date <- as.character(data$Date)
data$Date <- ymd(data$Date)
data$Date <- ymd_hms(data$Date)
data$Date <- ymd(data$Date)
data$Temp[4] <- 55
res <- ad_ts(data, max_anoms = 0.02, direction='both')
help(ad_vec)
res <- ad_vec(data$Temp, max_anoms = 0.02, direction = "both")
res <- ad_vec(data$Temp, max_anoms = 0.02, direction = "both", period = 30)
# for ggplot2
ggplot() +
geom_line(
data=data, aes(Date, Temp),
size=0.125, color="lightslategray"
)  +
geom_point(
data=res, aes(index, anoms), color="#cb181d", alpha=1/3
) +
scale_x_datetime(date_labels="%b\n%Y") +
scale_y_comma() +
theme_ipsum_rc(grid="XY")
